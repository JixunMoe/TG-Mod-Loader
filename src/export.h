#pragma once

/*  To use this exported function of dll, include this header
 *  in your project.
 */

#define DLL_EXPORT __declspec(dllexport)

#ifdef __cplusplus
extern "C"
{
#endif

void DLL_EXPORT unkWinmm1();
void DLL_EXPORT mciExecute();
void DLL_EXPORT CloseDriver();
void DLL_EXPORT DefDriverProc();
void DLL_EXPORT DriverCallback();
void DLL_EXPORT DrvGetModuleHandle();
void DLL_EXPORT GetDriverModuleHandle();
void DLL_EXPORT NotifyCallbackData();
void DLL_EXPORT OpenDriver();
void DLL_EXPORT PlaySound();
void DLL_EXPORT PlaySoundA();
void DLL_EXPORT PlaySoundW();
void DLL_EXPORT SendDriverMessage();
void DLL_EXPORT WOW32DriverCallback();
void DLL_EXPORT WOW32ResolveMultiMediaHandle();
void DLL_EXPORT WOWAppExit();
void DLL_EXPORT aux32Message();
void DLL_EXPORT auxGetDevCapsA();
void DLL_EXPORT auxGetDevCapsW();
void DLL_EXPORT auxGetNumDevs();
void DLL_EXPORT auxGetVolume();
void DLL_EXPORT auxOutMessage();
void DLL_EXPORT auxSetVolume();
void DLL_EXPORT joy32Message();
void DLL_EXPORT joyConfigChanged();
void DLL_EXPORT joyGetDevCapsA();
void DLL_EXPORT joyGetDevCapsW();
void DLL_EXPORT joyGetNumDevs();
void DLL_EXPORT joyGetPos();
void DLL_EXPORT joyGetPosEx();
void DLL_EXPORT joyGetThreshold();
void DLL_EXPORT joyReleaseCapture();
void DLL_EXPORT joySetCapture();
void DLL_EXPORT joySetThreshold();
void DLL_EXPORT mci32Message();
void DLL_EXPORT mciDriverNotify();
void DLL_EXPORT mciDriverYield();
void DLL_EXPORT mciFreeCommandResource();
void DLL_EXPORT mciGetCreatorTask();
void DLL_EXPORT mciGetDeviceIDA();
void DLL_EXPORT mciGetDeviceIDFromElementIDA();
void DLL_EXPORT mciGetDeviceIDFromElementIDW();
void DLL_EXPORT mciGetDeviceIDW();
void DLL_EXPORT mciGetDriverData();
void DLL_EXPORT mciGetErrorStringA();
void DLL_EXPORT mciGetErrorStringW();
void DLL_EXPORT mciGetYieldProc();
void DLL_EXPORT mciLoadCommandResource();
void DLL_EXPORT mciSendCommandA();
void DLL_EXPORT mciSendCommandW();
void DLL_EXPORT mciSendStringA();
void DLL_EXPORT mciSendStringW();
void DLL_EXPORT mciSetDriverData();
void DLL_EXPORT mciSetYieldProc();
void DLL_EXPORT mid32Message();
void DLL_EXPORT midiConnect();
void DLL_EXPORT midiDisconnect();
void DLL_EXPORT midiInAddBuffer();
void DLL_EXPORT midiInClose();
void DLL_EXPORT midiInGetDevCapsA();
void DLL_EXPORT midiInGetDevCapsW();
void DLL_EXPORT midiInGetErrorTextA();
void DLL_EXPORT midiInGetErrorTextW();
void DLL_EXPORT midiInGetID();
void DLL_EXPORT midiInGetNumDevs();
void DLL_EXPORT midiInMessage();
void DLL_EXPORT midiInOpen();
void DLL_EXPORT midiInPrepareHeader();
void DLL_EXPORT midiInReset();
void DLL_EXPORT midiInStart();
void DLL_EXPORT midiInStop();
void DLL_EXPORT midiInUnprepareHeader();
void DLL_EXPORT midiOutCacheDrumPatches();
void DLL_EXPORT midiOutCachePatches();
void DLL_EXPORT midiOutClose();
void DLL_EXPORT midiOutGetDevCapsA();
void DLL_EXPORT midiOutGetDevCapsW();
void DLL_EXPORT midiOutGetErrorTextA();
void DLL_EXPORT midiOutGetErrorTextW();
void DLL_EXPORT midiOutGetID();
void DLL_EXPORT midiOutGetNumDevs();
void DLL_EXPORT midiOutGetVolume();
void DLL_EXPORT midiOutLongMsg();
void DLL_EXPORT midiOutMessage();
void DLL_EXPORT midiOutOpen();
void DLL_EXPORT midiOutPrepareHeader();
void DLL_EXPORT midiOutReset();
void DLL_EXPORT midiOutSetVolume();
void DLL_EXPORT midiOutShortMsg();
void DLL_EXPORT midiOutUnprepareHeader();
void DLL_EXPORT midiStreamClose();
void DLL_EXPORT midiStreamOpen();
void DLL_EXPORT midiStreamOut();
void DLL_EXPORT midiStreamPause();
void DLL_EXPORT midiStreamPosition();
void DLL_EXPORT midiStreamProperty();
void DLL_EXPORT midiStreamRestart();
void DLL_EXPORT midiStreamStop();
void DLL_EXPORT mixerClose();
void DLL_EXPORT mixerGetControlDetailsA();
void DLL_EXPORT mixerGetControlDetailsW();
void DLL_EXPORT mixerGetDevCapsA();
void DLL_EXPORT mixerGetDevCapsW();
void DLL_EXPORT mixerGetID();
void DLL_EXPORT mixerGetLineControlsA();
void DLL_EXPORT mixerGetLineControlsW();
void DLL_EXPORT mixerGetLineInfoA();
void DLL_EXPORT mixerGetLineInfoW();
void DLL_EXPORT mixerGetNumDevs();
void DLL_EXPORT mixerMessage();
void DLL_EXPORT mixerOpen();
void DLL_EXPORT mixerSetControlDetails();
void DLL_EXPORT mmDrvInstall();
void DLL_EXPORT mmGetCurrentTask();
void DLL_EXPORT mmTaskBlock();
void DLL_EXPORT mmTaskCreate();
void DLL_EXPORT mmTaskSignal();
void DLL_EXPORT mmTaskYield();
void DLL_EXPORT mmioAdvance();
void DLL_EXPORT mmioAscend();
void DLL_EXPORT mmioClose();
void DLL_EXPORT mmioCreateChunk();
void DLL_EXPORT mmioDescend();
void DLL_EXPORT mmioFlush();
void DLL_EXPORT mmioGetInfo();
void DLL_EXPORT mmioInstallIOProcA();
void DLL_EXPORT mmioInstallIOProcW();
void DLL_EXPORT mmioOpenA();
void DLL_EXPORT mmioOpenW();
void DLL_EXPORT mmioRead();
void DLL_EXPORT mmioRenameA();
void DLL_EXPORT mmioRenameW();
void DLL_EXPORT mmioSeek();
void DLL_EXPORT mmioSendMessage();
void DLL_EXPORT mmioSetBuffer();
void DLL_EXPORT mmioSetInfo();
void DLL_EXPORT mmioStringToFOURCCA();
void DLL_EXPORT mmioStringToFOURCCW();
void DLL_EXPORT mmioWrite();
void DLL_EXPORT mmsystemGetVersion();
void DLL_EXPORT mod32Message();
void DLL_EXPORT mxd32Message();
void DLL_EXPORT sndPlaySoundA();
void DLL_EXPORT sndPlaySoundW();
void DLL_EXPORT tid32Message();
void DLL_EXPORT timeBeginPeriod();
void DLL_EXPORT timeEndPeriod();
void DLL_EXPORT timeGetDevCaps();
void DLL_EXPORT timeGetSystemTime();
void DLL_EXPORT timeGetTime();
void DLL_EXPORT timeKillEvent();
void DLL_EXPORT timeSetEvent();
void DLL_EXPORT waveInAddBuffer();
void DLL_EXPORT waveInClose();
void DLL_EXPORT waveInGetDevCapsA();
void DLL_EXPORT waveInGetDevCapsW();
void DLL_EXPORT waveInGetErrorTextA();
void DLL_EXPORT waveInGetErrorTextW();
void DLL_EXPORT waveInGetID();
void DLL_EXPORT waveInGetNumDevs();
void DLL_EXPORT waveInGetPosition();
void DLL_EXPORT waveInMessage();
void DLL_EXPORT waveInOpen();
void DLL_EXPORT waveInPrepareHeader();
void DLL_EXPORT waveInReset();
void DLL_EXPORT waveInStart();
void DLL_EXPORT waveInStop();
void DLL_EXPORT waveInUnprepareHeader();
void DLL_EXPORT waveOutBreakLoop();
void DLL_EXPORT waveOutClose();
void DLL_EXPORT waveOutGetDevCapsA();
void DLL_EXPORT waveOutGetDevCapsW();
void DLL_EXPORT waveOutGetErrorTextA();
void DLL_EXPORT waveOutGetErrorTextW();
void DLL_EXPORT waveOutGetID();
void DLL_EXPORT waveOutGetNumDevs();
void DLL_EXPORT waveOutGetPitch();
void DLL_EXPORT waveOutGetPlaybackRate();
void DLL_EXPORT waveOutGetPosition();
void DLL_EXPORT waveOutGetVolume();
void DLL_EXPORT waveOutMessage();
void DLL_EXPORT waveOutOpen();
void DLL_EXPORT waveOutPause();
void DLL_EXPORT waveOutPrepareHeader();
void DLL_EXPORT waveOutReset();
void DLL_EXPORT waveOutRestart();
void DLL_EXPORT waveOutSetPitch();
void DLL_EXPORT waveOutSetPlaybackRate();
void DLL_EXPORT waveOutSetVolume();
void DLL_EXPORT waveOutUnprepareHeader();
void DLL_EXPORT waveOutWrite();
void DLL_EXPORT wid32Message();
void DLL_EXPORT wod32Message();

#ifdef __cplusplus
}
#endif

